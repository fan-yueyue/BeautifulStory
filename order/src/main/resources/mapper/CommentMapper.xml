<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mr.order.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.mr.order.vo.CommentVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="order_time_id" property="orderTimeId" jdbcType="BIGINT" />
    <result column="member_nick_name" property="memberNickName" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="star" property="star" jdbcType="INTEGER" />
    <result column="member_ip" property="memberIp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="show_status" property="showStatus" jdbcType="INTEGER" />
    <result column="product_attribute" property="productAttribute" jdbcType="VARCHAR" />
    <result column="collect_couont" property="collectCouont" jdbcType="INTEGER" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="pics" property="pics" jdbcType="VARCHAR" />
    <result column="member_icon" property="memberIcon" jdbcType="VARCHAR" />
    <result column="replay_count" property="replayCount" jdbcType="INTEGER" />
    <result column="member_nick_name" property="username" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="product_pic" property="productPic" jdbcType="VARCHAR" />

  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mr.order.vo.CommentVO" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, member_nick_name, product_name, star, member_ip, create_time, show_status, 
    product_attribute, collect_couont, read_count, pics, member_icon, replay_count
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>


  <insert id="addCom" parameterType="com.mr.order.vo.CommentVO" >
    insert into pms_comment (id, order_time_id, product_id, member_nick_name,
      product_name, star, member_ip,
      create_time, show_status,content
      )
    values (#{id,jdbcType=BIGINT}, #{orderTimeId,jdbcType=BIGINT},#{productId,jdbcType=BIGINT}, #{memberNickName,jdbcType=VARCHAR},
      #{productName,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, #{memberIp,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{showStatus,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <select id="listCom" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select *
    from pms_comment
    where product_id  = #{productId,jdbcType=BIGINT}
  </select>
  <select id="listCom2" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select pms.*,item.product_pic
    from pms_comment pms LEFT JOIN oms_order_item item
on pms.product_id = item.id
    where order_time_id  = #{orderTimeId,jdbcType=BIGINT}
  </select>





  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pms_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pms_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mr.order.vo.CommentVO" >
    insert into pms_comment (id, product_id, member_nick_name, 
      product_name, star, member_ip, 
      create_time, show_status, product_attribute, 
      collect_couont, read_count, pics, 
      member_icon, replay_count, content
      )
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{memberNickName,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, #{memberIp,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{showStatus,jdbcType=INTEGER}, #{productAttribute,jdbcType=VARCHAR}, 
      #{collectCouont,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, #{pics,jdbcType=VARCHAR}, 
      #{memberIcon,jdbcType=VARCHAR}, #{replayCount,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mr.order.vo.CommentVO" >
    insert into pms_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="memberNickName != null" >
        member_nick_name,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="memberIp != null" >
        member_ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="showStatus != null" >
        show_status,
      </if>
      <if test="productAttribute != null" >
        product_attribute,
      </if>
      <if test="collectCouont != null" >
        collect_couont,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="pics != null" >
        pics,
      </if>
      <if test="memberIcon != null" >
        member_icon,
      </if>
      <if test="replayCount != null" >
        replay_count,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="memberNickName != null" >
        #{memberNickName,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="star != null" >
        #{star,jdbcType=INTEGER},
      </if>
      <if test="memberIp != null" >
        #{memberIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showStatus != null" >
        #{showStatus,jdbcType=INTEGER},
      </if>
      <if test="productAttribute != null" >
        #{productAttribute,jdbcType=VARCHAR},
      </if>
      <if test="collectCouont != null" >
        #{collectCouont,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="pics != null" >
        #{pics,jdbcType=VARCHAR},
      </if>
      <if test="memberIcon != null" >
        #{memberIcon,jdbcType=VARCHAR},
      </if>
      <if test="replayCount != null" >
        #{replayCount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mr.order.vo.CommentVO" >
    update pms_comment
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="memberNickName != null" >
        member_nick_name = #{memberNickName,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="star != null" >
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="memberIp != null" >
        member_ip = #{memberIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showStatus != null" >
        show_status = #{showStatus,jdbcType=INTEGER},
      </if>
      <if test="productAttribute != null" >
        product_attribute = #{productAttribute,jdbcType=VARCHAR},
      </if>
      <if test="collectCouont != null" >
        collect_couont = #{collectCouont,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="pics != null" >
        pics = #{pics,jdbcType=VARCHAR},
      </if>
      <if test="memberIcon != null" >
        member_icon = #{memberIcon,jdbcType=VARCHAR},
      </if>
      <if test="replayCount != null" >
        replay_count = #{replayCount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mr.order.vo.CommentVO" >
    update pms_comment
    set product_id = #{productId,jdbcType=BIGINT},
      member_nick_name = #{memberNickName,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      member_ip = #{memberIp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      show_status = #{showStatus,jdbcType=INTEGER},
      product_attribute = #{productAttribute,jdbcType=VARCHAR},
      collect_couont = #{collectCouont,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      pics = #{pics,jdbcType=VARCHAR},
      member_icon = #{memberIcon,jdbcType=VARCHAR},
      replay_count = #{replayCount,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mr.order.vo.CommentVO" >
    update pms_comment
    set product_id = #{productId,jdbcType=BIGINT},
      member_nick_name = #{memberNickName,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      member_ip = #{memberIp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      show_status = #{showStatus,jdbcType=INTEGER},
      product_attribute = #{productAttribute,jdbcType=VARCHAR},
      collect_couont = #{collectCouont,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      pics = #{pics,jdbcType=VARCHAR},
      member_icon = #{memberIcon,jdbcType=VARCHAR},
      replay_count = #{replayCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>